{{ define "laravel.deployment-horizon.name" -}}
{{ template "laravel.name" . }}-horizon
{{- end -}}

{{ define "laravel.deployment-horizon.fullname" -}}
{{ template "laravel.fullname" . }}-horizon
{{- end -}}

{{- if .Values.horizon.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "laravel.deployment-horizon.fullname" . }}
  labels:
    {{- include "laravel.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ template "laravel.deployment-horizon.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: "{{ .Values.deployment.version }}"
    role: "horizon"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "laravel.deployment-horizon.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "laravel.deployment-horizon.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: "{{ .Values.deployment.version }}"
        role: "horizon"
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "laravel.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if not .Values.options.allowArmNodes }}
      nodeSelector:
        kubernetes.io/arch: "amd64"
      {{- end }}
      containers:
        - name: horizon
          image: {{ required "App image required" .Values.deployment.images.app }}:{{ required "App version" .Values.deployment.version }}
          imagePullPolicy: {{ .Values.deployment.pullPolicy }}
          args: ["php", "artisan", "horizon" ]
          resources:
            {{- with .Values.horizon.resources }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          env:
            {{- if not .Values.options.disableDefaultEnv }}
            - name: LOG_CHANNEL
              value: "stderr"
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          envFrom:
            {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            {{- range .Values.secretVolumes }}
            {{- $volume := . -}}
            {{- range .items }}
            - name: {{ $volume.name }}
              mountPath: {{ $volume.mountPath | default "/" | trimSuffix "/" }}/{{ .key }}
              subPath: {{ .key }}
              readOnly: true
            {{- end }}
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["php", "artisan", "horizon:terminate"]
      volumes:
      {{- range .Values.secretVolumes }}
        - name: {{ .name }}
          secret:
            secretName: {{ .name }}
            items:
              {{- toYaml .items | nindent 14 }}
      {{- end }}
{{- end }}
